<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="inspur.crawl.sysManage.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="inspur.crawl.sysManage.pojo.Account" >
    <result column="ID" property="id" jdbcType="VARCHAR" />
    <result column="ENABLE" property="enable" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="REGISTERTIME" property="registertime" jdbcType="TIMESTAMP" />
    <result column="ROLEID" property="roleid" jdbcType="VARCHAR" />
    <!--  一对一映射的关键:association  
    //select：执行dao.ClassTypeDAO.getClassTypeById方法,并将返回值设置到peoperty.来完成一对一映射  -->
    <association property="role" column="roleid" select="inspur.crawl.sysManage.mapper.RoleMapper.selectByPrimaryKey"/>  
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ENABLE, NAME, EMAIL, USERNAME, PASSWORD, REGISTERTIME, ROLEID
  </sql>
  <select id="selectByAccount" resultMap="BaseResultMap" parameterType="inspur.crawl.sysManage.pojo.AccountCriteria">
  select * from account where id = #{id}
  </select>
   <select id="selectByUsername" resultMap="BaseResultMap" parameterType="inspur.crawl.sysManage.pojo.AccountCriteria">
  select * from account where username = #{username}
  </select>
  <select id="listPage" resultMap="BaseResultMap" parameterType="inspur.crawl.sysManage.pojo.AccountCriteria">
  select * from account 
  </select>
  <select id="selectUser" resultMap="BaseResultMap" parameterType="inspur.crawl.sysManage.pojo.AccountCriteria" >
    <if test="skipCount > 0" >
       select * FROM ( SELECT temp_table.*,ROWNUM rn from ( select 
      <include refid="Base_Column_List" />
      from ACCOUNT
      <if test="_parameter != null" >
        <include refid="Example_Where_Clause" />
      </if>
      <if test="orderByClause != null" >
        order by ${orderByClause}
      </if>
      ) temp_table 
      <if test="top >= 0" >
        <![CDATA[ where rownum <= ${top} ]]>
      </if>
       ) where rn>=${skipCount}
    </if>
    <if test="skipCount == 0" >
      <if test="top >= 0" >
        SELECT temp_table.*,ROWNUM rn from ( 
      </if>
      select
      <include refid="Base_Column_List" />
      from ACCOUNT 
      <if test="_parameter != null" >
        <include refid="Example_Where_Clause" />
      </if>
      <if test="orderByClause != null" >
        order by ${orderByClause}
      </if>
      <if test="top >= 0" >
         ) temp_table <![CDATA[ where rownum <= ${top} ]]>
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="inspur.crawl.sysManage.pojo.AccountCriteria" >
    delete from ACCOUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="inspur.crawl.sysManage.pojo.Account" >
    insert into ACCOUNT (ID, ENABLE, NAME, 
      EMAIL, USERNAME, PASSWORD, 
      REGISTERTIME, ROLEID)
    values (#{id,jdbcType=VARCHAR}, #{enable,jdbcType=DECIMAL}, #{name,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{registertime,jdbcType=TIMESTAMP}, #{roleid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="inspur.crawl.sysManage.pojo.Account" >
    insert into ACCOUNT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="enable != null" >
        ENABLE,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="registertime != null" >
        REGISTERTIME,
      </if>
      <if test="roleid != null" >
        ROLEID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="registertime != null" >
        #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="inspur.crawl.sysManage.pojo.AccountCriteria" resultType="java.lang.Integer" >
    select count(*) from ACCOUNT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <!-- <update id="updateRoleId" parameterType="map">
  	update Account set roleid = #{record.id,jdbcType=VARCHAR} 
  </update> -->
  <update id="updateByExampleSelective" parameterType="map" >
    update ACCOUNT
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null" >
        ENABLE = #{record.enable,jdbcType=DECIMAL},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.registertime != null" >
        REGISTERTIME = #{record.registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.roleid != null" >
        ROLEID = #{record.roleid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ACCOUNT
    set ID = #{record.id,jdbcType=VARCHAR},
      ENABLE = #{record.enable,jdbcType=DECIMAL},
      NAME = #{record.name,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      REGISTERTIME = #{record.registertime,jdbcType=TIMESTAMP},
      ROLEID = #{record.roleid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
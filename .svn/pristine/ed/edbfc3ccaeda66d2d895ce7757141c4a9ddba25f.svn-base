/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.inspur.avro.model.java;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DataDeliver extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataDeliver\",\"namespace\":\"com.inspur.avro.model.java\",\"fields\":[{\"name\":\"demandId\",\"type\":[\"string\",\"null\"],\"doc\":\"需求ID\"},{\"name\":\"publishId\",\"type\":[\"string\",\"null\"],\"doc\":\"交付版本ID\"},{\"name\":\"tableName\",\"type\":[\"string\",\"null\"],\"doc\":\"表名\"},{\"name\":\"deliverStage\",\"type\":[\"string\",\"null\"],\"doc\":\"交付阶段\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 需求ID */
  @Deprecated public java.lang.CharSequence demandId;
  /** 交付版本ID */
  @Deprecated public java.lang.CharSequence publishId;
  /** 表名 */
  @Deprecated public java.lang.CharSequence tableName;
  /** 交付阶段 */
  @Deprecated public java.lang.CharSequence deliverStage;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DataDeliver() {}

  /**
   * All-args constructor.
   */
  public DataDeliver(java.lang.CharSequence demandId, java.lang.CharSequence publishId, java.lang.CharSequence tableName, java.lang.CharSequence deliverStage) {
    this.demandId = demandId;
    this.publishId = publishId;
    this.tableName = tableName;
    this.deliverStage = deliverStage;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return demandId;
    case 1: return publishId;
    case 2: return tableName;
    case 3: return deliverStage;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: demandId = (java.lang.CharSequence)value$; break;
    case 1: publishId = (java.lang.CharSequence)value$; break;
    case 2: tableName = (java.lang.CharSequence)value$; break;
    case 3: deliverStage = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'demandId' field.
   * 需求ID   */
  public java.lang.CharSequence getDemandId() {
    return demandId;
  }

  /**
   * Sets the value of the 'demandId' field.
   * 需求ID   * @param value the value to set.
   */
  public void setDemandId(java.lang.CharSequence value) {
    this.demandId = value;
  }

  /**
   * Gets the value of the 'publishId' field.
   * 交付版本ID   */
  public java.lang.CharSequence getPublishId() {
    return publishId;
  }

  /**
   * Sets the value of the 'publishId' field.
   * 交付版本ID   * @param value the value to set.
   */
  public void setPublishId(java.lang.CharSequence value) {
    this.publishId = value;
  }

  /**
   * Gets the value of the 'tableName' field.
   * 表名   */
  public java.lang.CharSequence getTableName() {
    return tableName;
  }

  /**
   * Sets the value of the 'tableName' field.
   * 表名   * @param value the value to set.
   */
  public void setTableName(java.lang.CharSequence value) {
    this.tableName = value;
  }

  /**
   * Gets the value of the 'deliverStage' field.
   * 交付阶段   */
  public java.lang.CharSequence getDeliverStage() {
    return deliverStage;
  }

  /**
   * Sets the value of the 'deliverStage' field.
   * 交付阶段   * @param value the value to set.
   */
  public void setDeliverStage(java.lang.CharSequence value) {
    this.deliverStage = value;
  }

  /** Creates a new DataDeliver RecordBuilder */
  public static com.inspur.avro.model.java.DataDeliver.Builder newBuilder() {
    return new com.inspur.avro.model.java.DataDeliver.Builder();
  }
  
  /** Creates a new DataDeliver RecordBuilder by copying an existing Builder */
  public static com.inspur.avro.model.java.DataDeliver.Builder newBuilder(com.inspur.avro.model.java.DataDeliver.Builder other) {
    return new com.inspur.avro.model.java.DataDeliver.Builder(other);
  }
  
  /** Creates a new DataDeliver RecordBuilder by copying an existing DataDeliver instance */
  public static com.inspur.avro.model.java.DataDeliver.Builder newBuilder(com.inspur.avro.model.java.DataDeliver other) {
    return new com.inspur.avro.model.java.DataDeliver.Builder(other);
  }
  
  /**
   * RecordBuilder for DataDeliver instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataDeliver>
    implements org.apache.avro.data.RecordBuilder<DataDeliver> {

    private java.lang.CharSequence demandId;
    private java.lang.CharSequence publishId;
    private java.lang.CharSequence tableName;
    private java.lang.CharSequence deliverStage;

    /** Creates a new Builder */
    private Builder() {
      super(com.inspur.avro.model.java.DataDeliver.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.inspur.avro.model.java.DataDeliver.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.demandId)) {
        this.demandId = data().deepCopy(fields()[0].schema(), other.demandId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.publishId)) {
        this.publishId = data().deepCopy(fields()[1].schema(), other.publishId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tableName)) {
        this.tableName = data().deepCopy(fields()[2].schema(), other.tableName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deliverStage)) {
        this.deliverStage = data().deepCopy(fields()[3].schema(), other.deliverStage);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DataDeliver instance */
    private Builder(com.inspur.avro.model.java.DataDeliver other) {
            super(com.inspur.avro.model.java.DataDeliver.SCHEMA$);
      if (isValidValue(fields()[0], other.demandId)) {
        this.demandId = data().deepCopy(fields()[0].schema(), other.demandId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.publishId)) {
        this.publishId = data().deepCopy(fields()[1].schema(), other.publishId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tableName)) {
        this.tableName = data().deepCopy(fields()[2].schema(), other.tableName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deliverStage)) {
        this.deliverStage = data().deepCopy(fields()[3].schema(), other.deliverStage);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'demandId' field */
    public java.lang.CharSequence getDemandId() {
      return demandId;
    }
    
    /** Sets the value of the 'demandId' field */
    public com.inspur.avro.model.java.DataDeliver.Builder setDemandId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.demandId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'demandId' field has been set */
    public boolean hasDemandId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'demandId' field */
    public com.inspur.avro.model.java.DataDeliver.Builder clearDemandId() {
      demandId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'publishId' field */
    public java.lang.CharSequence getPublishId() {
      return publishId;
    }
    
    /** Sets the value of the 'publishId' field */
    public com.inspur.avro.model.java.DataDeliver.Builder setPublishId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.publishId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'publishId' field has been set */
    public boolean hasPublishId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'publishId' field */
    public com.inspur.avro.model.java.DataDeliver.Builder clearPublishId() {
      publishId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'tableName' field */
    public java.lang.CharSequence getTableName() {
      return tableName;
    }
    
    /** Sets the value of the 'tableName' field */
    public com.inspur.avro.model.java.DataDeliver.Builder setTableName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.tableName = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'tableName' field has been set */
    public boolean hasTableName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'tableName' field */
    public com.inspur.avro.model.java.DataDeliver.Builder clearTableName() {
      tableName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'deliverStage' field */
    public java.lang.CharSequence getDeliverStage() {
      return deliverStage;
    }
    
    /** Sets the value of the 'deliverStage' field */
    public com.inspur.avro.model.java.DataDeliver.Builder setDeliverStage(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.deliverStage = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'deliverStage' field has been set */
    public boolean hasDeliverStage() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'deliverStage' field */
    public com.inspur.avro.model.java.DataDeliver.Builder clearDeliverStage() {
      deliverStage = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public DataDeliver build() {
      try {
        DataDeliver record = new DataDeliver();
        record.demandId = fieldSetFlags()[0] ? this.demandId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.publishId = fieldSetFlags()[1] ? this.publishId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.tableName = fieldSetFlags()[2] ? this.tableName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.deliverStage = fieldSetFlags()[3] ? this.deliverStage : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}

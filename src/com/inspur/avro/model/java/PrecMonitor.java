/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.inspur.avro.model.java;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PrecMonitor extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PrecMonitor\",\"namespace\":\"com.inspur.avro.model.java\",\"fields\":[{\"name\":\"kafka_topic\",\"type\":\"string\"},{\"name\":\"task_id\",\"type\":[\"string\",\"null\"]},{\"name\":\"instance_id\",\"type\":[\"string\",\"null\"]},{\"name\":\"rule_id\",\"type\":[\"string\",\"null\"]},{\"name\":\"export_num\",\"type\":[\"string\",\"null\"]},{\"name\":\"time_stamp\",\"type\":[\"string\",\"null\"]},{\"name\":\"stage\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence kafka_topic;
  @Deprecated public java.lang.CharSequence task_id;
  @Deprecated public java.lang.CharSequence instance_id;
  @Deprecated public java.lang.CharSequence rule_id;
  @Deprecated public java.lang.CharSequence export_num;
  @Deprecated public java.lang.CharSequence time_stamp;
  @Deprecated public java.lang.CharSequence stage;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PrecMonitor() {}

  /**
   * All-args constructor.
   */
  public PrecMonitor(java.lang.CharSequence kafka_topic, java.lang.CharSequence task_id, java.lang.CharSequence instance_id, java.lang.CharSequence rule_id, java.lang.CharSequence export_num, java.lang.CharSequence time_stamp, java.lang.CharSequence stage) {
    this.kafka_topic = kafka_topic;
    this.task_id = task_id;
    this.instance_id = instance_id;
    this.rule_id = rule_id;
    this.export_num = export_num;
    this.time_stamp = time_stamp;
    this.stage = stage;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return kafka_topic;
    case 1: return task_id;
    case 2: return instance_id;
    case 3: return rule_id;
    case 4: return export_num;
    case 5: return time_stamp;
    case 6: return stage;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: kafka_topic = (java.lang.CharSequence)value$; break;
    case 1: task_id = (java.lang.CharSequence)value$; break;
    case 2: instance_id = (java.lang.CharSequence)value$; break;
    case 3: rule_id = (java.lang.CharSequence)value$; break;
    case 4: export_num = (java.lang.CharSequence)value$; break;
    case 5: time_stamp = (java.lang.CharSequence)value$; break;
    case 6: stage = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'kafka_topic' field.
   */
  public java.lang.CharSequence getKafkaTopic() {
    return kafka_topic;
  }

  /**
   * Sets the value of the 'kafka_topic' field.
   * @param value the value to set.
   */
  public void setKafkaTopic(java.lang.CharSequence value) {
    this.kafka_topic = value;
  }

  /**
   * Gets the value of the 'task_id' field.
   */
  public java.lang.CharSequence getTaskId() {
    return task_id;
  }

  /**
   * Sets the value of the 'task_id' field.
   * @param value the value to set.
   */
  public void setTaskId(java.lang.CharSequence value) {
    this.task_id = value;
  }

  /**
   * Gets the value of the 'instance_id' field.
   */
  public java.lang.CharSequence getInstanceId() {
    return instance_id;
  }

  /**
   * Sets the value of the 'instance_id' field.
   * @param value the value to set.
   */
  public void setInstanceId(java.lang.CharSequence value) {
    this.instance_id = value;
  }

  /**
   * Gets the value of the 'rule_id' field.
   */
  public java.lang.CharSequence getRuleId() {
    return rule_id;
  }

  /**
   * Sets the value of the 'rule_id' field.
   * @param value the value to set.
   */
  public void setRuleId(java.lang.CharSequence value) {
    this.rule_id = value;
  }

  /**
   * Gets the value of the 'export_num' field.
   */
  public java.lang.CharSequence getExportNum() {
    return export_num;
  }

  /**
   * Sets the value of the 'export_num' field.
   * @param value the value to set.
   */
  public void setExportNum(java.lang.CharSequence value) {
    this.export_num = value;
  }

  /**
   * Gets the value of the 'time_stamp' field.
   */
  public java.lang.CharSequence getTimeStamp() {
    return time_stamp;
  }

  /**
   * Sets the value of the 'time_stamp' field.
   * @param value the value to set.
   */
  public void setTimeStamp(java.lang.CharSequence value) {
    this.time_stamp = value;
  }

  /**
   * Gets the value of the 'stage' field.
   */
  public java.lang.CharSequence getStage() {
    return stage;
  }

  /**
   * Sets the value of the 'stage' field.
   * @param value the value to set.
   */
  public void setStage(java.lang.CharSequence value) {
    this.stage = value;
  }

  /** Creates a new PrecMonitor RecordBuilder */
  public static com.inspur.avro.model.java.PrecMonitor.Builder newBuilder() {
    return new com.inspur.avro.model.java.PrecMonitor.Builder();
  }
  
  /** Creates a new PrecMonitor RecordBuilder by copying an existing Builder */
  public static com.inspur.avro.model.java.PrecMonitor.Builder newBuilder(com.inspur.avro.model.java.PrecMonitor.Builder other) {
    return new com.inspur.avro.model.java.PrecMonitor.Builder(other);
  }
  
  /** Creates a new PrecMonitor RecordBuilder by copying an existing PrecMonitor instance */
  public static com.inspur.avro.model.java.PrecMonitor.Builder newBuilder(com.inspur.avro.model.java.PrecMonitor other) {
    return new com.inspur.avro.model.java.PrecMonitor.Builder(other);
  }
  
  /**
   * RecordBuilder for PrecMonitor instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PrecMonitor>
    implements org.apache.avro.data.RecordBuilder<PrecMonitor> {

    private java.lang.CharSequence kafka_topic;
    private java.lang.CharSequence task_id;
    private java.lang.CharSequence instance_id;
    private java.lang.CharSequence rule_id;
    private java.lang.CharSequence export_num;
    private java.lang.CharSequence time_stamp;
    private java.lang.CharSequence stage;

    /** Creates a new Builder */
    private Builder() {
      super(com.inspur.avro.model.java.PrecMonitor.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.inspur.avro.model.java.PrecMonitor.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.kafka_topic)) {
        this.kafka_topic = data().deepCopy(fields()[0].schema(), other.kafka_topic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.task_id)) {
        this.task_id = data().deepCopy(fields()[1].schema(), other.task_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.instance_id)) {
        this.instance_id = data().deepCopy(fields()[2].schema(), other.instance_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.rule_id)) {
        this.rule_id = data().deepCopy(fields()[3].schema(), other.rule_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.export_num)) {
        this.export_num = data().deepCopy(fields()[4].schema(), other.export_num);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.time_stamp)) {
        this.time_stamp = data().deepCopy(fields()[5].schema(), other.time_stamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stage)) {
        this.stage = data().deepCopy(fields()[6].schema(), other.stage);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PrecMonitor instance */
    private Builder(com.inspur.avro.model.java.PrecMonitor other) {
            super(com.inspur.avro.model.java.PrecMonitor.SCHEMA$);
      if (isValidValue(fields()[0], other.kafka_topic)) {
        this.kafka_topic = data().deepCopy(fields()[0].schema(), other.kafka_topic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.task_id)) {
        this.task_id = data().deepCopy(fields()[1].schema(), other.task_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.instance_id)) {
        this.instance_id = data().deepCopy(fields()[2].schema(), other.instance_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.rule_id)) {
        this.rule_id = data().deepCopy(fields()[3].schema(), other.rule_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.export_num)) {
        this.export_num = data().deepCopy(fields()[4].schema(), other.export_num);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.time_stamp)) {
        this.time_stamp = data().deepCopy(fields()[5].schema(), other.time_stamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stage)) {
        this.stage = data().deepCopy(fields()[6].schema(), other.stage);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'kafka_topic' field */
    public java.lang.CharSequence getKafkaTopic() {
      return kafka_topic;
    }
    
    /** Sets the value of the 'kafka_topic' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder setKafkaTopic(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.kafka_topic = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'kafka_topic' field has been set */
    public boolean hasKafkaTopic() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'kafka_topic' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder clearKafkaTopic() {
      kafka_topic = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'task_id' field */
    public java.lang.CharSequence getTaskId() {
      return task_id;
    }
    
    /** Sets the value of the 'task_id' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder setTaskId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.task_id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'task_id' field has been set */
    public boolean hasTaskId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'task_id' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder clearTaskId() {
      task_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'instance_id' field */
    public java.lang.CharSequence getInstanceId() {
      return instance_id;
    }
    
    /** Sets the value of the 'instance_id' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder setInstanceId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.instance_id = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'instance_id' field has been set */
    public boolean hasInstanceId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'instance_id' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder clearInstanceId() {
      instance_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'rule_id' field */
    public java.lang.CharSequence getRuleId() {
      return rule_id;
    }
    
    /** Sets the value of the 'rule_id' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder setRuleId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.rule_id = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'rule_id' field has been set */
    public boolean hasRuleId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'rule_id' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder clearRuleId() {
      rule_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'export_num' field */
    public java.lang.CharSequence getExportNum() {
      return export_num;
    }
    
    /** Sets the value of the 'export_num' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder setExportNum(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.export_num = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'export_num' field has been set */
    public boolean hasExportNum() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'export_num' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder clearExportNum() {
      export_num = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'time_stamp' field */
    public java.lang.CharSequence getTimeStamp() {
      return time_stamp;
    }
    
    /** Sets the value of the 'time_stamp' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder setTimeStamp(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.time_stamp = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'time_stamp' field has been set */
    public boolean hasTimeStamp() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'time_stamp' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder clearTimeStamp() {
      time_stamp = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'stage' field */
    public java.lang.CharSequence getStage() {
      return stage;
    }
    
    /** Sets the value of the 'stage' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder setStage(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.stage = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'stage' field has been set */
    public boolean hasStage() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'stage' field */
    public com.inspur.avro.model.java.PrecMonitor.Builder clearStage() {
      stage = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public PrecMonitor build() {
      try {
        PrecMonitor record = new PrecMonitor();
        record.kafka_topic = fieldSetFlags()[0] ? this.kafka_topic : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.task_id = fieldSetFlags()[1] ? this.task_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.instance_id = fieldSetFlags()[2] ? this.instance_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.rule_id = fieldSetFlags()[3] ? this.rule_id : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.export_num = fieldSetFlags()[4] ? this.export_num : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.time_stamp = fieldSetFlags()[5] ? this.time_stamp : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.stage = fieldSetFlags()[6] ? this.stage : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
